import { IAttributes as ICancelActionAttributes } from '../action/organize/cancel';
import { IExtendId } from '../autoGenerated';
import * as TaskFactory from '../task';
import TaskName from '../taskName';

import * as chevre from '../../chevre';
import * as COA from '../../coa';

export type IObject4COA = COA.services.reserve.IStateReserveArgs;

export interface IObject4Chevre {
    typeOf: chevre.transactionType.Reserve;
    id?: string;
    transactionNumber?: string;
}

export type IObject<T extends chevre.service.webAPI.Identifier> =
    T extends chevre.service.webAPI.Identifier.COA ? IObject4COA :
    IObject4Chevre;

export type IPotentialActions = chevre.transaction.cancelReservation.IPotentialActionsParams;

export type IData = ICancelActionAttributes<IObject<chevre.service.webAPI.Identifier>, any> & {
    potentialActions?: IPotentialActions;
};

export interface IAttributes extends TaskFactory.IAttributes {
    name: TaskName.CancelReservation;
    data: IData;
}

/**
 * 予約取消タスクインターフェース
 */
export type ITask = IExtendId<IAttributes>;
